@model IEnumerable<ITP245_Model.Item>

@{
    ViewBag.Title = "Items";
    Layout = "~/Areas/Inventory/Views/Shared/_Layout.cshtml";
}

<section class="myTableBox indexFont" style="padding-bottom: 4rem">

    <p>

        @Html.ActionLink("Create Item", "Create", null, new { @class = "btn btn-primary btn-lg" }) &nbsp; &nbsp; &nbsp; &nbsp;

        <!--Drop down list category filter -->
        <label class="filter">Item Tag:</label>&nbsp; &nbsp;

        @* CategoryId = Viewbag.CategoryId  ------------ I give up on trying to find a way to select all as default*@
        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "filter", @onchange = "FillByTag()" })

        @* Holy mother of bacon I might have actually found a solution *@
        <button class="btn btn-primary"   onclick="ResetFilter()">Reset</button>

        <!--Search box name filter-->
        &nbsp;&nbsp;&nbsp;&nbsp;<label class="filter">Search by Item Name:</label>&nbsp;&nbsp;
        @Html.TextArea("Search", null, htmlAttributes: new { @class = "filter", @onchange = "FilterByName()" })
    </p>

    <div id="itemContainer">
        @Html.Partial("_Index", Model)
    </div>

</section>

    @section Scripts{

        <script type="text/javascript">

        function FillByTag() {
            var categoryId = $('#CategoryId').val();
            var container = $('#itemContainer');
            container.load('@Url.Action("_IndexByTag")?id=' + categoryId)
        }

        function FilterByName() {
            var parm = $('#Search').val();
            var container = $('#itemContainer');
            container.load('@Url.Action("_IndexByName")?parm=' + parm)

        }
        function ResetFilter() {
            var container = $('#itemContainer');
        container.load('@Url.Action("_IndexByTag")?id=' + 0)
        }
        </script>


    }
